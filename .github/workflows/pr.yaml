name: pull-request-checks
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read

jobs:
  linter:
    name: golangci-lint
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOPRIVATE: github.com/mothergroup

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58
  test:
    name: unit tests
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 1
      GOPRIVATE: github.com/mothergroup

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/

      - name: download dependencies
        run: go mod tidy

      - name: run unit tests
        run: go test ./... --race

  code-coverage:
    name: code-coverage
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOPRIVATE: github.com/mothergroup

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/

      - name: download dependencies
        run: go mod tidy

      - name: generate test coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      - name: check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: cover.out
          local-prefix: github.com/LevinStrike/lux-backend
          threshold-total: 90

  build:
    name: build binary
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOPRIVATE: github.com/mothergroup

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/

      - name: download dependencies
        run: go mod tidy

      - name: run unit tests
        run: go build -o build ./cmd/.
